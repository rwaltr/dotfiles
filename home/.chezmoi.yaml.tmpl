# vi: ft=yaml

{{/* boolean feature tags */}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $work := false -}}{{/* true if this machine is a work machine */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
{{- $personal := false -}}{{/* true if this machine should have personal secrets */}}
{{- "" -}}

{{- $osID := .chezmoi.os -}}
{{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
{{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") (env "DEVPOD") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{- end -}}

{{/* work around unreliable hostname on darwin */}}
{{- $hostname := .chezmoi.hostname -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $hostname := output "scutil" "--get" "LocalHostName" | trim -}}
{{- end -}}

{{- if eq .chezmoi.os "windows" -}}
{{-   $ephemeral = true -}}
{{- end -}}

{{- if or (eq .chezmoi.username "coder") (env "CODER") }}
{{- ephemeral = true -}}
{{- headless = true -}}
{{- work = true -}}
{{- end -}}

{{- if not $ephemeral -}}
{{- else if stdinIsATTY -}}
{{-     $headless = promptBoolOnce . "headless" "headless" -}}
{{-     $ephemeral = promptBoolOnce . "ephemeral" "ephemeral" -}}
{{- else -}}
{{- ephemeral = true -}}
{{- headless = true -}}
{{- end -}}


{{- $email := "rwaltr@rwalt.pro"}}

sourceDir: {{ .chezmoi.sourceDir | quote }}

data:
  email: {{ $email | quote }}
  personal: {{ $personal }}
  work: {{ $work }}
  headless: {{ $headless }}
  ephemeral: {{ $ephemeral }}
  osid: {{ $osID | quote }}
